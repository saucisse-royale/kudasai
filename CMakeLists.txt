cmake_minimum_required (VERSION 3.1)
project (kudasai)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
include_directories(include)
link_directories(lib)
file(GLOB SOURCES src/*.cpp src/*.hpp)
add_executable(kudasai ${SOURCES})
IF (WIN32)
    target_link_libraries(kudasai glfw3dll)
ELSE()
    find_package(PkgConfig REQUIRED)
    pkg_search_module(GLFW REQUIRED glfw3)
    include_directories(${GLFW_INCLUDE_DIRS})
    target_link_libraries(kudasai ${GLFW_LIBRARIES})
    target_link_libraries(kudasai pthread dl)
ENDIF()

add_custom_command(TARGET kudasai POST_BUILD COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/bin/shaders)
file(GLOB shaders src/shaders/*.frag src/shaders/*.vert)
file(TO_NATIVE_PATH ${CMAKE_SOURCE_DIR}/bin/ glslPath)
set(SHADER_COMPILE_STRING ${glslPath}glslangValidator -V)
foreach(shader ${shaders})
    get_filename_component(filename ${shader} NAME)
    file(TO_NATIVE_PATH ${CMAKE_SOURCE_DIR}/bin/shaders/ prefix)
    add_custom_command(TARGET kudasai POST_BUILD COMMAND ${SHADER_COMPILE_STRING} ${shader} -o ${prefix}${filename}.spv WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/bin/)
endforeach()

IF(CMAKE_BUILD_TOOL MATCHES "(msdev|devenv|nmake)")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
    SET(CMAKE_CXX_WARNING_LEVEL 4)
ELSE()
    IF(NOT CMAKE_CXX_FLAGS MATCHES "-Wall$")
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
    ENDIF()
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-missing-braces")
ENDIF()

install(TARGETS kudasai DESTINATION bin)
